{"content": {"suites": {"0": {"status": {"total_pass": 9, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_call_the_ordering_api", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_get_order_by_id", "rerun": "0"}, "2": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_mss", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_out_of_stock_quantity", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_payment_failed", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_create_order_with_an_empty_basket", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_create_order", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_create_order_and_confirmation_from_catalog", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_price_invalid", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_create_order_fail_with_card_type_4", "rerun": "0"}}, "suite_name": "tests/test_functional.py"}, "1": {"suite_name": "tests/test_load.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_call_the_ordering_api", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_get_order_by_id", "rerun": "0"}, "2": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_mss", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_out_of_stock_quantity", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_payment_failed", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_create_order_with_an_empty_basket", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_create_order", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_create_order_and_confirmation_from_catalog", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_price_invalid", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_create_order_fail_with_card_type_4", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_scalability_for_handling_high_volumes_of_orders", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_Checking_100_orders_per_hour", "rerun": "0"}}, "status": {"total_pass": 11, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "2": {"suite_name": "tests/test_non_functional.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_call_the_ordering_api", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_get_order_by_id", "rerun": "0"}, "2": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_mss", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_out_of_stock_quantity", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_payment_failed", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_create_order_with_an_empty_basket", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_create_order", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_create_order_and_confirmation_from_catalog", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_price_invalid", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_create_order_fail_with_card_type_4", "rerun": "0"}, "10": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_update_check_successfully_status_4_to_5", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_update_check_failed_status_2_to_5", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_update_check_failed_status_3_to_5", "rerun": "0"}, "13": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_update_check_failed_status_5_to_6", "rerun": "0"}, "14": {"status": "FAIL", "message": "           assert 400 == 200\n            +  where 400 = <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229938E4210>>(3353)\n            +    where <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229938E4210>> = <utils.api.ordering_api.OrderingAPI object at 0x00000229938E4210>.put_cancel_order\n       Exception: assert 400 == 200\n        +  where 400 = <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229938E4210>>(3353)\n        +    where <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229938E4210>> = <utils.api.ordering_api.OrderingAPI object at 0x00000229938E4210>.put_cancel_order\n", "test_name": "test_cancel_order_successfully_status_1_to_6", "rerun": "0"}, "15": {"status": "FAIL", "message": "           assert 400 == 200\n            +  where 400 = <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x0000022993F96810>>(3354)\n            +    where <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x0000022993F96810>> = <utils.api.ordering_api.OrderingAPI object at 0x0000022993F96810>.put_cancel_order\n       Exception: assert 400 == 200\n        +  where 400 = <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x0000022993F96810>>(3354)\n        +    where <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x0000022993F96810>> = <utils.api.ordering_api.OrderingAPI object at 0x0000022993F96810>.put_cancel_order\n", "test_name": "test_cancel_order_successfully_status_2_to_6", "rerun": "0"}, "16": {"status": "FAIL", "message": "           assert 400 == 200\n            +  where 400 = <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229939E8450>>(3355)\n            +    where <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229939E8450>> = <utils.api.ordering_api.OrderingAPI object at 0x00000229939E8450>.put_cancel_order\n       Exception: assert 400 == 200\n        +  where 400 = <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229939E8450>>(3355)\n        +    where <bound method OrderingAPI.put_cancel_order of <utils.api.ordering_api.OrderingAPI object at 0x00000229939E8450>> = <utils.api.ordering_api.OrderingAPI object at 0x00000229939E8450>.put_cancel_order\n", "test_name": "test_cancel_order_successfully_status_3_to_6", "rerun": "0"}, "17": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_order_cancel_failure_4_to_6", "rerun": "0"}, "18": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_order_cancel_failure_5_to_6", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_get_order_with_an_incorrect_order_number", "rerun": "0"}}, "status": {"total_pass": 12, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 8, "total_error": 0}}, "3": {"suite_name": "tests/test_preformance.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_call_the_ordering_api", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_get_order_by_id", "rerun": "0"}, "2": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_mss", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_out_of_stock_quantity", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_payment_failed", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_create_order_with_an_empty_basket", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_create_order", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_create_order_and_confirmation_from_catalog", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_price_invalid", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_create_order_fail_with_card_type_4", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_reliability_create_order_before_status_1", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_reliability_create_order_after_status_1", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_reliability_ordering_backgroundtasks_after_status_2", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_reliability_ordering_backgroundtasks_after_status_3", "rerun": "0"}, "14": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_Checking_100_orders_per_hour_performence", "rerun": "0"}}, "status": {"total_pass": 13, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}, "4": {"suite_name": "tests/test_security.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_call_the_ordering_api", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_get_order_by_id", "rerun": "0"}, "2": {"status": "FAIL", "message": "   TypeError: pre_conditions() missing 1 required positional argument: 'start_docker'\n", "test_name": "test_mss", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_out_of_stock_quantity", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_payment_failed", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_create_order_with_an_empty_basket", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_create_order", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_create_order_and_confirmation_from_catalog", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_price_invalid", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_create_order_fail_with_card_type_4", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_user_request_with_invalid_token", "rerun": "0"}, "11": {"status": "FAIL", "message": "           AssertionError: assert {'city': 'Redmond', 'country': 'U.S.', 'date': '2023-03-14T12:17:34.7861128', 'description': None, ...} == 401\n            +  where {'city': 'Redmond', 'country': 'U.S.', 'date': '2023-03-14T12:17:34.7861128', 'description': None, ...} = <bound method OrderingAPI.get_order_by_id of <utils.api.ordering_api.OrderingAPI object at 0x0000022993FBE950>>(501)\n            +    where <bound method OrderingAPI.get_order_by_id of <utils.api.ordering_api.OrderingAPI object at 0x0000022993FBE950>> = <utils.api.ordering_api.OrderingAPI object at 0x0000022993FBE950>.get_order_by_id\n       Exception: this bag assert {'city': 'Redmond', 'country': 'U.S.', 'date': '2023-03-14T12:17:34.7861128', 'description': None, ...} == 401\n        +  where {'city': 'Redmond', 'country': 'U.S.', 'date': '2023-03-14T12:17:34.7861128', 'description': None, ...} = <bound method OrderingAPI.get_order_by_id of <utils.api.ordering_api.OrderingAPI object at 0x0000022993FBE950>>(501)\n        +    where <bound method OrderingAPI.get_order_by_id of <utils.api.ordering_api.OrderingAPI object at 0x0000022993FBE950>> = <utils.api.ordering_api.OrderingAPI object at 0x0000022993FBE950>.get_order_by_id\n", "test_name": "test_security_connect_user_for_user_another_get", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_security_connect_user_for_user_another_cancel", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_security_connect_user_for_user_another_update", "rerun": "0"}}, "status": {"total_pass": 12, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}}}, "date": "March 19, 2023", "start_time": 1679184862.1630933, "total_suite": 5, "status": "FAIL", "status_list": {"pass": "57", "fail": "14", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "71"}