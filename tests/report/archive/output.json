{"content": {"suites": {"0": {"status": {"total_pass": 26, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 8, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_create_order_successfully_MSS", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_create_order_with_out_stock", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_create_order_payment_rejected", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_update_from_1_to_5_should_not_update", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_update_from_2_to_5_should_not_update", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_update_from_3_to_5_should_not_update", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_update_from_4_to_5_update", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_update_from_6_to_5_should_not_update", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_cancel_from_1_to_6_should_update", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_cancel_from_2_to_6_should_update", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_cancel_from_3_to_6_should_update", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_cancel_from_4_to_6_should_not_update", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_cancel_from_5_to_6_should_not_update", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_create_order_when_ordering_service_down", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_create_order_when_ordering_service_restarts", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_create_100_new_orders", "rerun": "0"}, "16": {"status": "FAIL", "message": "   assert 40 == 41\n", "test_name": "test_create_order_when_user_not_exist_in_db", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_create_order_when_there_is_no_zipcode", "rerun": "0"}, "18": {"status": "FAIL", "message": "   assert 41 == 42\n", "test_name": "test_create_new_order_card_number_not_valid_only_chars", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_create_order_when_cardTypeId_not_valid_number_not_defined", "rerun": "0"}, "20": {"status": "PASS", "message": "", "test_name": "test_create_new_order_when_CardExpiration_expired", "rerun": "0"}, "21": {"status": "PASS", "message": "", "test_name": "test_create_new_order_when_CardTypeId_not_valid_only_chars", "rerun": "0"}, "22": {"status": "PASS", "message": "", "test_name": "test_create_new_order_when_CardTypeId_not_valid_only_chars_with_number_defined", "rerun": "0"}, "23": {"status": "PASS", "message": "", "test_name": "test_create_new_order_when_CardSecuirtyNumber_not_valid_only_chars", "rerun": "0"}, "24": {"status": "FAIL", "message": "   assert 42 == 43\n", "test_name": "test_create_new_order_when_insert_wrong_CardSecuirtyNumber", "rerun": "0"}, "25": {"status": "PASS", "message": "", "test_name": "test_create_new_order_with_negative_number_of_items", "rerun": "0"}, "26": {"status": "PASS", "message": "", "test_name": "test_create_new_order_with_zero_items", "rerun": "0"}, "27": {"status": "FAIL", "message": "   assert 43 == 44\n", "test_name": "test_create_new_order_with_productId_that_not_exist_in_db", "rerun": "0"}, "28": {"status": "PASS", "message": "", "test_name": "test_create_new_order_with_productId_not_valid_string", "rerun": "0"}, "29": {"status": "FAIL", "message": "   assert 44 == 45\n", "test_name": "test_create_new_order_with_productId_not_valid_negative_numbers", "rerun": "0"}, "30": {"status": "PASS", "message": "", "test_name": "test_create_new_order_with_price_not_valid_negative_numbers", "rerun": "0"}, "31": {"status": "FAIL", "message": "       assert 200 == 400\n        +  where 200 = <Response [200]>.status_code\n", "test_name": "test_get_orderid_of_another_user_bob_to_alice", "rerun": "0"}, "32": {"status": "FAIL", "message": "   assert 200 == 400\n    +  where 200 = <Response [200]>.status_code\n", "test_name": "test_cancel_order_of_another_user_bob_to_alice", "rerun": "0"}, "33": {"status": "FAIL", "message": "       assert 200 == 400\n        +  where 200 = <Response [200]>.status_code\n", "test_name": "test_update_order_of_another_user_bob_to_alice", "rerun": "0"}}, "suite_name": "test_ordering.py"}}}, "date": "March 20, 2023", "start_time": 1679336284.0394413, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "26", "fail": "8", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "34"}